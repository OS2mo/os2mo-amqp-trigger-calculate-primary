# Generated by ariadne-codegen on 2024-06-14 12:52
# Source: queries.graphql

from uuid import UUID

from .async_base_client import AsyncBaseClient
from .get_engagement_person import GetEngagementPerson, GetEngagementPersonEngagements


def gql(q: str) -> str:
    return q


class GraphQLClient(AsyncBaseClient):

    async def get_engagement_person(
        self, uuids: UUID
    ) -> GetEngagementPersonEngagements:
        query = gql(
            """
            query GetEngagementPerson($uuids: UUID!) {
              engagements(filter: {uuids: [$uuids]}) {
                objects {
                  objects(end: null, start: null) {
                    employee {
                      uuid
                    }
                  }
                }
              }
            }
            """
        )
        variables: dict[str, object] = {"uuids": uuids}
        response = await self.execute(query=query, variables=variables)
        data = self.get_data(response)
        return GetEngagementPerson.parse_obj(data).engagements
